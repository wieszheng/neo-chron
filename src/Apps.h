#ifndef APPS_H
#define APPS_H

#include "DisplayManager.h"

const uint16_t icon_13[] = {0, 0, 46486, 46486, 46486, 46486, 0, 0, 0, 46486, 65535, 0, 65535, 65535, 46486, 0, 46486, 65535, 65535, 0, 65535, 65535, 65535, 46486, 46486, 65535, 65535, 0, 65535, 0, 65535, 46486, 46486, 65535, 65535, 0, 0, 65535, 65535, 46486, 46486, 65535, 65535, 65535, 65535, 65535, 65535, 46486, 0, 46486, 65535, 65535, 65535, 65535, 46486, 0, 0, 0, 46486, 46486, 46486, 46486, 0, 0};
const uint16_t icon_1158[] = {1087, 0, 0, 1087, 1087, 0, 0, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 65535, 1087, 1087, 1087, 1087, 1087, 1087, 65535, 65535, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 65535, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 65535, 1087, 1087, 1087, 1087, 1087, 1087, 65535, 65535, 65535, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087};
const uint16_t icon_234[] = {0, 65535, 65535, 65535, 0, 0, 0, 0, 0, 65535, 0, 65535, 0, 0, 0, 0, 0, 65535, 63488, 65535, 0, 0, 0, 0, 0, 65535, 63488, 65535, 0, 0, 0, 0, 0, 65535, 63488, 65535, 0, 0, 0, 0, 65535, 63488, 63488, 63488, 65535, 0, 0, 0, 65535, 63488, 63488, 63488, 65535, 0, 0, 0, 0, 65535, 65535, 65535, 0, 0, 0, 0};
const uint16_t icon_432[] = {0, 0, 0, 63422, 63422, 0, 0, 0, 0, 0, 63422, 0, 0, 63422, 0, 0, 0, 0, 63422, 0, 0, 63422, 0, 0, 0, 0, 63422, 0, 58254, 63422, 0, 0, 0, 0, 63422, 58254, 60042, 63422, 0, 0, 0, 63422, 58254, 60042, 57798, 53605, 63422, 0, 0, 63422, 60042, 57798, 53605, 49477, 63422, 0, 0, 0, 63422, 63422, 63422, 63422, 0, 0};
const uint16_t icon_2075[] = {0, 0, 61279, 0, 0, 0, 0, 0, 0, 65535, 59199, 50751, 0, 0, 0, 0, 65535, 61279, 59199, 50751, 44383, 0, 0, 0, 61279, 59199, 59199, 44383, 44383, 0, 0, 0, 61279, 50751, 50751, 44383, 31737, 0, 0, 0, 0, 44383, 44383, 31737, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
const uint16_t icon_1486[] = {0, 0, 2016, 2016, 2016, 0, 0, 0, 0, 2016, 2016, 2914, 2016, 2016, 0, 0, 0, 2016, 2914, 2914, 2914, 2016, 0, 0, 0, 2016, 2914, 2914, 2914, 2016, 0, 0, 0, 2016, 2914, 2914, 2914, 2016, 0, 0, 0, 2016, 2914, 2914, 2914, 2016, 0, 0, 0, 2016, 2914, 2914, 2914, 2016, 0, 0, 0, 2016, 2016, 2016, 2016, 2016, 0, 0};
const uint16_t icon_693[] = {0, 0, 0, 1471, 0, 0, 0, 0, 0, 0, 0, 1471, 0, 0, 0, 0, 0, 0, 65535, 65535, 1471, 0, 0, 0, 0, 0, 65535, 1471, 1471, 0, 0, 0, 0, 65535, 1471, 1471, 1471, 860, 0, 0, 0, 1471, 1471, 1471, 1471, 860, 0, 0, 0, 1471, 1471, 1471, 860, 860, 0, 0, 0, 0, 860, 860, 860, 0, 0, 0};
const uint16_t icon_732[] = {0, 0, 0, 0, 64560, 0, 0, 0, 0, 0, 0, 60335, 60335, 0, 0, 0, 0, 0, 60335, 65535, 65535, 60335, 0, 0, 60335, 60335, 60335, 60335, 60335, 60335, 60335, 60335, 0, 60335, 60335, 63488, 60335, 60335, 60335, 0, 0, 36580, 60335, 60335, 60335, 36580, 0, 0, 64560, 36580, 41775, 41775, 41775, 36580, 64560, 0, 0, 0, 0, 0, 0, 0, 0, 64560};
const uint16_t icon_734[] = {0, 0, 0, 63497, 63497, 63497, 65535, 0, 0, 0, 0, 63497, 63497, 63497, 63497, 63497, 0, 0, 45929, 58995, 45929, 0, 58995, 0, 0, 0, 45929, 58995, 58995, 45929, 45929, 58995, 0, 0, 0, 45929, 58995, 58995, 58995, 0, 0, 63497, 63497, 65507, 9659, 9659, 64928, 0, 65535, 0, 9659, 9659, 9659, 9659, 10570, 35953, 0, 0, 45929, 0, 0, 0, 39209, 0};
const uint16_t icon_735[] = {0, 0, 0, 1800, 1800, 1800, 65502, 0, 0, 0, 0, 1800, 1800, 1800, 1800, 1800, 0, 0, 41736, 41736, 41736, 58896, 58896, 0, 0, 0, 41736, 58896, 41736, 0, 58896, 0, 0, 0, 0, 58896, 58896, 41736, 41736, 58896, 0, 1800, 1800, 65504, 58896, 58896, 58896, 0, 65502, 0, 9496, 9496, 9496, 9496, 8456, 33808, 0, 0, 41736, 0, 0, 0, 33032, 0};
const uint16_t icon_736[] = {0, 0, 0, 58624, 0, 58624, 0, 0, 0, 0, 0, 9496, 58624, 57352, 0, 0, 0, 65504, 65504, 58896, 65504, 65504, 65504, 0, 65504, 65504, 58896, 58896, 8456, 58896, 8456, 58624, 0, 65504, 9496, 58896, 58896, 58896, 58896, 8456, 65504, 65504, 58392, 58392, 57352, 57352, 58624, 0, 65504, 58392, 57352, 65502, 65502, 33808, 50712, 0, 0, 57352, 57352, 57352, 57352, 57352, 57352, 0};
const uint16_t icon_737[] = {0, 0, 57352, 1800, 1032, 1800, 0, 0, 0, 57352, 1800, 0, 1800, 1800, 1800, 1800, 0, 0, 65502, 65502, 1800, 1800, 1800, 1800, 0, 57352, 65502, 65502, 1800, 1800, 1800, 1800, 0, 0, 57352, 50712, 65502, 65502, 65502, 0, 1032, 57352, 1032, 1032, 50712, 50712, 1032, 0, 0, 1032, 1800, 1032, 50712, 50712, 1032, 1032, 0, 0, 57352, 57352, 0, 33032, 33032, 0};
const uint16_t icon_738[] = {0, 57352, 57352, 65502, 65502, 65502, 50712, 0, 57352, 57352, 65502, 65502, 0, 65502, 0, 50712, 0, 33032, 65502, 65502, 0, 65502, 0, 50712, 0, 57352, 65502, 65502, 65502, 65502, 65502, 50712, 0, 57352, 57352, 65502, 65502, 65502, 65502, 0, 57352, 57352, 33032, 41736, 58624, 58624, 41736, 0, 57352, 33032, 57352, 57352, 57352, 57352, 57352, 33032, 0, 8456, 8456, 8456, 0, 8456, 8456, 8456};
const uint16_t icon_739[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41736, 41736, 0, 0, 0, 0, 0, 41736, 41736, 41736, 41736, 0, 0, 0, 41736, 41736, 0, 41736, 0, 33032, 0, 41736, 41736, 65502, 33032, 33032, 33032, 33032, 65502, 41736, 41736, 41736, 41736, 41736, 41736, 41736, 33032, 0, 0, 33032, 58624, 58624, 0, 0, 0, 0, 0, 41736, 41736, 33032, 33032, 0, 0};
const uint16_t icon_740[] = {0, 0, 0, 0, 65504, 0, 58624, 0, 0, 0, 0, 58624, 0, 65504, 0, 0, 0, 0, 0, 65504, 65504, 65504, 65504, 65504, 0, 1800, 65502, 65504, 58624, 65504, 65504, 65504, 1800, 65502, 65504, 50712, 50712, 58624, 58624, 0, 1032, 65504, 41736, 50712, 65502, 50712, 0, 41736, 0, 1032, 50712, 58624, 65502, 50712, 41736, 0, 0, 0, 1800, 1800, 0, 1032, 1032, 0};
const uint16_t icon_741[] = {0, 0, 0, 57352, 65502, 57352, 0, 0, 0, 0, 65502, 57352, 57352, 57352, 57352, 0, 0, 33032, 57352, 57352, 65502, 65502, 50712, 50712, 0, 33032, 57352, 65502, 65502, 33032, 33032, 50712, 0, 1800, 33032, 33032, 33032, 33032, 33032, 0, 1800, 0, 0, 33032, 33808, 33032, 0, 0, 0, 1800, 0, 0, 0, 0, 0, 0, 1800, 1800, 1800, 1032, 1032, 1032, 0, 0};
const uint16_t icon_742[] = {0, 0, 58392, 58392, 58392, 0, 0, 58624, 0, 0, 0, 65502, 58392, 65502, 0, 57352, 65502, 50712, 58624, 58392, 58392, 33808, 8456, 8456, 65502, 58624, 9496, 9496, 33808, 33808, 57352, 8456, 65502, 58624, 9496, 9496, 0, 33808, 41736, 0, 0, 0, 50712, 0, 50712, 0, 0, 0, 0, 65502, 0, 0, 0, 50712, 0, 0, 0, 65502, 65502, 0, 0, 50712, 50712, 0};
const uint16_t icon_743[] = {0, 0, 58624, 58624, 41736, 41736, 58624, 0, 0, 0, 58624, 58624, 65502, 65502, 0, 0, 0, 0, 0, 58896, 58896, 58896, 58896, 0, 0, 0, 57352, 57352, 58896, 58896, 58896, 33808, 50712, 65502, 0, 33032, 57352, 0, 8456, 33808, 65502, 0, 0, 33032, 33032, 0, 0, 0, 0, 0, 58624, 58624, 0, 0, 41736, 41736, 0, 0, 50712, 50712, 0, 33808, 33808, 33808};
const uint16_t icon_744[] = {0, 0, 65502, 57352, 57352, 0, 33032, 0, 0, 1032, 65502, 1800, 0, 58896, 58896, 58896, 65502, 1032, 41736, 58896, 58896, 58896, 58896, 58896, 1032, 58624, 41736, 58896, 58896, 58392, 58392, 0, 65502, 58624, 0, 65504, 58896, 58896, 58896, 58624, 1032, 41736, 0, 65504, 50712, 58624, 0, 58624, 0, 58624, 58624, 50712, 50712, 41736, 58624, 0, 0, 58624, 65504, 0, 0, 41736, 58624, 0};
const uint16_t icon_745[] = {0, 9659, 9659, 9659, 9659, 9659, 2145, 0, 9659, 9659, 9659, 58995, 9659, 9659, 9659, 0, 0, 9659, 9659, 9659, 9659, 0, 9659, 0, 9659, 9659, 9659, 35953, 58995, 58995, 58995, 45929, 0, 10570, 9659, 9659, 45929, 45929, 0, 0, 0, 9659, 10570, 9659, 58995, 58995, 10570, 35953, 0, 65535, 0, 9659, 0, 10570, 0, 0, 0, 0, 63497, 65535, 0, 35953, 39209, 0};
const uint16_t icon_746[] = {0, 0, 0, 2025, 2025, 2025, 1257, 0, 0, 10570, 9659, 9659, 0, 9659, 0, 0, 0, 0, 2025, 2025, 2025, 2025, 2025, 1257, 0, 45929, 2025, 2025, 2025, 58585, 2025, 1257, 45929, 45929, 1257, 45929, 45929, 45929, 0, 0, 45929, 2025, 1257, 65507, 64928, 65507, 1257, 0, 2145, 45929, 2025, 64928, 64928, 64928, 2145, 2145, 0, 0, 2025, 0, 0, 1257, 2145, 2145};
const uint16_t icon_747[] = {0, 0, 2145, 2025, 2025, 2025, 1257, 2145, 2145, 39209, 63497, 63497, 0, 63497, 0, 0, 0, 0, 2025, 2025, 2025, 2025, 2025, 1257, 0, 45929, 2025, 2025, 1257, 1257, 2025, 1257, 45929, 45929, 1257, 45929, 45929, 45929, 0, 0, 45929, 2025, 1257, 65507, 64928, 65507, 1257, 0, 0, 45929, 2025, 64928, 64928, 64928, 2145, 0, 0, 0, 2025, 0, 0, 1257, 2145, 2145};
const uint16_t icon_748[] = {0, 0, 0, 2025, 2025, 2025, 1257, 0, 0, 39209, 58585, 58585, 0, 58585, 0, 0, 0, 0, 2025, 2025, 2025, 2025, 2025, 1257, 0, 45929, 2025, 2025, 2025, 1257, 2025, 1257, 45929, 45929, 1257, 45929, 45929, 45929, 0, 0, 45929, 2025, 1257, 65507, 64928, 65507, 1257, 0, 2145, 45929, 2025, 64928, 64928, 64928, 0, 0, 0, 2145, 2025, 0, 0, 1257, 0, 0};
const uint16_t icon_749[] = {0, 0, 0, 2025, 2025, 2025, 1257, 2145, 0, 45929, 64928, 64928, 0, 64928, 0, 0, 0, 0, 2025, 65535, 65535, 2025, 2025, 1257, 0, 45929, 2025, 65535, 65535, 65535, 2025, 1257, 45929, 45929, 1257, 45929, 45929, 45929, 0, 0, 45929, 2025, 1257, 65507, 64928, 65507, 1257, 0, 2145, 41736, 2025, 64928, 64928, 64928, 0, 0, 0, 0, 2025, 0, 0, 1257, 0, 0};
const uint16_t icon_750[] = {2145, 45929, 45929, 45929, 45929, 39209, 0, 0, 0, 41736, 45929, 58995, 45929, 45929, 39209, 0, 45929, 45929, 58995, 0, 58995, 0, 39209, 0, 45929, 45929, 58995, 58995, 58995, 58995, 35953, 8456, 0, 0, 64928, 58995, 45929, 35953, 35953, 8456, 0, 58995, 65507, 64928, 64928, 45929, 58995, 0, 0, 58995, 65507, 65507, 65507, 0, 0, 0, 0, 0, 65535, 0, 35953, 0, 0, 0};
const uint16_t icon_751[] = {0, 45929, 0, 0, 39209, 0, 0, 0, 0, 45929, 45929, 45929, 39209, 39209, 0, 0, 45929, 45929, 45929, 0, 45929, 0, 39209, 0, 45929, 45929, 45929, 45929, 45929, 45929, 10570, 10570, 0, 39209, 39209, 45929, 45929, 45929, 10570, 10570, 63497, 39209, 63497, 39209, 39209, 39209, 0, 0, 45929, 39209, 39209, 63497, 63497, 39209, 39209, 0, 0, 45929, 0, 0, 0, 39209, 0, 0};
const uint16_t icon_752[] = {0, 0, 0, 65504, 65504, 65504, 0, 0, 0, 0, 65504, 65504, 65504, 65504, 65504, 0, 0, 0, 65504, 65504, 0, 65504, 0, 0, 0, 0, 65504, 58896, 58896, 58896, 58896, 0, 0, 0, 65504, 58896, 58896, 58896, 41736, 0, 0, 65502, 65502, 65502, 65502, 65502, 58896, 0, 65504, 65504, 9496, 9496, 9496, 9496, 8456, 58624, 0, 0, 9496, 9496, 0, 8456, 8456, 0};
const uint16_t icon_753[] = {0, 9496, 9496, 9496, 9496, 8456, 0, 0, 9496, 9496, 9496, 9496, 65504, 65504, 8456, 0, 9496, 9496, 9496, 65504, 0, 65504, 0, 0, 0, 9496, 65504, 65504, 65504, 65504, 65504, 0, 0, 0, 0, 65504, 65504, 65504, 0, 0, 0, 65504, 65504, 65504, 65504, 58624, 58624, 0, 65504, 0, 1800, 1800, 1800, 1032, 0, 58624, 0, 0, 57352, 57352, 33032, 33032, 0, 0};
const uint16_t icon_754[] = {0, 0, 65504, 58624, 65504, 58624, 65504, 0, 0, 0, 65504, 65504, 65504, 65504, 65504, 0, 0, 0, 65504, 65504, 0, 65504, 0, 0, 0, 0, 65504, 65504, 65504, 65504, 65504, 0, 0, 0, 65504, 65504, 65504, 65504, 0, 0, 0, 57352, 57352, 57352, 57352, 57352, 33032, 0, 58624, 0, 9496, 9496, 9496, 9496, 8456, 58624, 0, 0, 9496, 9496, 0, 8456, 8456, 0};
const uint16_t icon_755[] = {0, 0, 65504, 58624, 65504, 0, 0, 0, 0, 65504, 65504, 65504, 65504, 65504, 0, 0, 65504, 65504, 65504, 0, 65504, 0, 65504, 0, 0, 65504, 65504, 65504, 65504, 65504, 0, 0, 0, 0, 65504, 65504, 58624, 0, 0, 0, 0, 65504, 57352, 57352, 33032, 58624, 0, 0, 65504, 57352, 57352, 57352, 33032, 33032, 58624, 0, 0, 0, 58624, 58624, 41736, 0, 0, 0};
const uint16_t icon_756[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65504, 9496, 9496, 65504, 0, 0, 0, 65504, 65504, 65504, 65504, 65504, 65504, 0, 0, 58624, 65504, 65504, 0, 65504, 0, 0, 0, 65504, 65504, 65504, 65504, 57352, 57352, 0, 0, 0, 58624, 65504, 65504, 57352, 57352, 0, 0, 9496, 9496, 9496, 8456, 8456, 0, 0, 9496, 9496, 9496, 65504, 9496, 8456, 58624, 0};
const uint16_t icon_757[] = {0, 0, 0, 16347, 16347, 0, 0, 0, 0, 0, 16347, 16347, 16347, 63422, 0, 0, 0, 16347, 16347, 16347, 16347, 63422, 63422, 0, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 63422, 0, 16347, 16347, 16347, 16347, 63422, 63422, 0, 0, 0, 16347, 16347, 16347, 63422, 0, 0, 0, 0, 0, 16347, 16347, 0, 0, 0};
const uint16_t icon_758[] = {2146, 2146, 2146, 2146, 2115, 4162, 2146, 2146, 2146, 2146, 2146, 2146, 65535, 63497, 2146, 2146, 2146, 2146, 2146, 2146, 63487, 65535, 63487, 2146, 2146, 99, 1981, 57643, 63487, 57417, 63497, 2146, 2146, 1981, 65019, 8194, 63487, 57417, 2146, 2146, 2146, 18203, 63497, 2146, 65535, 57418, 2146, 2146, 2146, 2114, 65535, 65535, 65535, 2115, 2146, 2146, 2146, 2146, 2146, 2114, 2146, 2146, 2146, 2146};

const uint16_t *getIcon(int icon)
{
    switch (icon)
    {
    case 1:
        return icon_13;
    case 2:
        return icon_741;
    case 3:
        return icon_742;
    case 4:
        return icon_743;
    case 5:
        return icon_744;
    case 6:
        return icon_745;
    default:
        return icon_741;
    }
}

uint16_t HEXtoColor(String hex)
{
    hex.replace("#", "");
    hex = hex.substring(0, 6);
    if (hex.length() == 6)
    {
        uint8_t r = strtol(hex.substring(0, 2).c_str(), nullptr, 16);
        uint8_t g = strtol(hex.substring(2, 4).c_str(), nullptr, 16);
        uint8_t b = strtol(hex.substring(4, 6).c_str(), nullptr, 16);
        return ((r & 0xF8) << 8) | ((g & 0xFC) << 3) | (b >> 3);
    }
    else
    {
        return 0;
    }
}

const char *getTimeFormat()
{
    if (TIME_SHOW_S)
    {
        return "%H:%M:%S";
    }
    else
    {
        return TIME_FORMAT.c_str();
    }
}

const char *getDateFormat()
{
    if (DATE_SHOW_Y)
    {
        return DATE_FORMAT.c_str();
    }
    else
    {
        return "%m.%d.";
    }
}

void TimeApp(FastLED_NeoMatrix *matrix, int16_t x, int16_t y)
{
    uint16_t color = HEXtoColor(TEXTCOLOR.c_str());
    matrix->setTextColor(color);

    time_t now = time(nullptr);
    struct tm *timeInfo;
    timeInfo = localtime(&now);
    const char *timeformat = getTimeFormat();
    char t[20];
    char t2[20];
    if (timeformat[2] == ' ')
    {
        strcpy(t2, timeformat);
        if (now % 2)
        {
            t2[2] = ' ';
        }
        else
        {
            t2[2] = ':';
        }
        strftime(t, sizeof(t), t2, localtime(&now));
    }
    else
    {
        strftime(t, sizeof(t), timeformat, localtime(&now));
    }
    int16_t wdPosX = 0;
    if (TIME_ICON.length() > 0 && !TIME_SHOW_S)
    {
        if (TIME_ICON == "none")
        {
            DisplayManager.printText(0 + x, y, t, true, false);
            wdPosX = -4;
        }
        else
        {
            matrix->drawRGBBitmap(x, y - 6, getIcon(TIME_ICON.toInt()), 8, 8);
            DisplayManager.printText(12 + x, y, t, false, false);
        }
    }
    else
    {
        DisplayManager.printText(0 + x, y, t, true, false);
    }

    uint8_t LINE_WIDTH = !TIME_SHOW_S > 0 ? 2 : 3;
    uint8_t LINE_SPACING = 1;
    uint8_t LINE_START = !TIME_SHOW_S > 0 ? 10 : 2;
    int dayOffset = 0; // 周日偏移量

    for (int i = 0; i <= 6; i++)
    {
        int lineStart = LINE_START + i * (LINE_WIDTH + LINE_SPACING);
        int lineEnd = lineStart + LINE_WIDTH - 1;
        if (i == (timeInfo->tm_wday + 6 + dayOffset) % 7)
            color = HEXtoColor(WDC_ACTIVE.c_str());
        else
            color = HEXtoColor(WDC_INACTIVE.c_str());

        matrix->drawLine(lineStart + x + wdPosX, 1 + y, lineEnd + x + wdPosX, 1 + y, color);
    }
}

void DateApp(FastLED_NeoMatrix *matrix, int16_t x, int16_t y)
{
    uint16_t color = HEXtoColor(TEXTCOLOR.c_str());
    matrix->setTextColor(color);

    time_t now = time(nullptr);
    struct tm *timeInfo;
    timeInfo = localtime(&now);
    const char *dateformat = getDateFormat();
    char d[20];
    strftime(d, sizeof(d), dateformat, localtime(&now));

    int16_t wdPosX = 0;

    if (DATE_ICON.length() > 0 && !DATE_SHOW_Y)
    {
        if (TIME_ICON == "none")
        {
            DisplayManager.printText(x, y, d, true, false);
            wdPosX = -4;
        }
        else
        {
            matrix->drawRGBBitmap(x, y - 6, getIcon(DATE_ICON.toInt()), 8, 8);
            DisplayManager.printText(11 + x, y, d, false, false);
        }
    }
    else
    {
        DisplayManager.printText(x, y, d, true, false);
    }

    uint8_t LINE_WIDTH = !DATE_SHOW_Y > 0 ? 2 : 3;
    uint8_t LINE_SPACING = 1;
    uint8_t LINE_START = !DATE_SHOW_Y > 0 ? 10 : 2;
    int dayOffset = 0; // 周日偏移量

    for (int i = 0; i <= 6; i++)
    {
        int lineStart = LINE_START + i * (LINE_WIDTH + LINE_SPACING);
        int lineEnd = lineStart + LINE_WIDTH - 1;
        if (i == (timeInfo->tm_wday + 6 + dayOffset) % 7)
            color = HEXtoColor(WDC_ACTIVE.c_str());
        else
            color = HEXtoColor(WDC_INACTIVE.c_str());

        matrix->drawLine(lineStart + x + wdPosX, 1 + y, lineEnd + x + wdPosX, 1 + y, color);
    }
}
#endif // APPS_H